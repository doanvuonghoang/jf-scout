/**
 * 
 */
package com.jf.scout.shared.administration.ui.desktop.forms;

import java.util.Map;
import java.util.Set;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import com.jf.scout.shared.administration.lookup.RoleLookupCall;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class UserFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public UserFormData() {
  }

  public Roles getRoles() {
    return getFieldByClass(Roles.class);
  }

  public UserName getUserName() {
    return getFieldByClass(UserName.class);
  }

  /**
   * access method for property UserNr.
   */
  public Long getUserNr() {
    return getUserNrProperty().getValue();
  }

  /**
   * access method for property UserNr.
   */
  public void setUserNr(Long userNr) {
    getUserNrProperty().setValue(userNr);
  }

  public UserNrProperty getUserNrProperty() {
    return getPropertyByClass(UserNrProperty.class);
  }

  public UserPassword getUserPassword() {
    return getFieldByClass(UserPassword.class);
  }

  public Valid getValid() {
    return getFieldByClass(Valid.class);
  }

  public static class Roles extends AbstractValueFieldData<Set<Long>> {

    private static final long serialVersionUID = 1L;

    public Roles() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.LOOKUP_CALL, RoleLookupCall.class);
      ruleMap.put(ValidationRule.MASTER_VALUE_FIELD, Valid.class);
      ruleMap.put(ValidationRule.MASTER_VALUE_REQUIRED, true);
    }
  }

  public static class UserName extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public UserName() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MANDATORY, true);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class UserNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;

    public UserNrProperty() {
    }
  }

  public static class UserPassword extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public UserPassword() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MANDATORY, true);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class Valid extends AbstractValueFieldData<Boolean> {

    private static final long serialVersionUID = 1L;

    public Valid() {
    }
  }
}
